package praxis.guilego;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.JCheckBox;

import javax.swing.JRadioButton;

public class FrameFilters extends javax.swing.JFrame {

    // private final WaveStreamGui gui;
    private final IPraxisGui coordinator;
    private boolean transmitting = true;

    /** Creates new form FrameFilters */
    public FrameFilters(IPraxisGui gui) {
        this.coordinator = gui;
        initComponents();
        cmdDismissFilter.requestFocusInWindow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        cbFilterIncludesBasketOrders = new javax.swing.JCheckBox();
        cbFilterIncludesSingleOrders = new javax.swing.JCheckBox();
        rbFilled1 = new javax.swing.JRadioButton();
        rbPartial1 = new javax.swing.JRadioButton();
        rbPENDINGNEW1 = new javax.swing.JRadioButton();
        rbNEW1 = new javax.swing.JRadioButton();
        rbRejected1 = new javax.swing.JRadioButton();
        rbDoneForDay1 = new javax.swing.JRadioButton();
        cbStateButtonsSelected = new javax.swing.JCheckBox();
        rbUnsent = new javax.swing.JRadioButton();
        rbPendingCancel = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        rbSecurityRegexSelected = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        rbRicExtensionSelected = new javax.swing.JRadioButton();
        rbSecurityNameSelected = new javax.swing.JRadioButton();
        txtSecurityName = new javax.swing.JTextField();
        cbSecurityNameSelected = new javax.swing.JCheckBox();
        cmdDismissFilter = new javax.swing.JButton();
        cbEU01 = new javax.swing.JCheckBox();
        cbEU02 = new javax.swing.JCheckBox();
        cbEU03 = new javax.swing.JCheckBox();
        cbEU04 = new javax.swing.JCheckBox();
        cbEU05 = new javax.swing.JCheckBox();
        cbEU06 = new javax.swing.JCheckBox();
        cbMicroStrategySelected = new javax.swing.JCheckBox();
        rbTX = new javax.swing.JRadioButton();
        rbRX = new javax.swing.JRadioButton();
        cbDestination = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbNHWK = new javax.swing.JCheckBox();
        cbUBSC = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        cbUBSV = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        cbCSCR = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        cbISTC = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        cbUBSM = new javax.swing.JCheckBox();
        bla = new javax.swing.JLabel();

        setAlwaysOnTop(true);

        cbFilterIncludesBasketOrders.setSelected(true);
        cbFilterIncludesBasketOrders.setText("BASKET ORDERS");
        cbFilterIncludesBasketOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFilterIncludesBasketOrdersActionPerformed(evt);
            }
        });

        cbFilterIncludesSingleOrders.setSelected(true);
        cbFilterIncludesSingleOrders.setText("SINGLES");
        cbFilterIncludesSingleOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFilterIncludesSingleOrdersActionPerformed(evt);
            }
        });

        rbFilled1.setText("FILLED");
        rbFilled1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        rbFilled1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFilled1ActionPerformed(evt);
            }
        });

        rbPartial1.setText("PARTIALLYFILLED");
        rbPartial1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        rbPartial1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPartial1ActionPerformed(evt);
            }
        });

        rbPENDINGNEW1.setText("PENDINGNEW");
        rbPENDINGNEW1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        rbPENDINGNEW1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPENDINGNEW1ActionPerformed(evt);
            }
        });

        rbNEW1.setText("NEW");
        rbNEW1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        rbNEW1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNEW1ActionPerformed(evt);
            }
        });

        rbRejected1.setText("REJECTED");
        rbRejected1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        rbRejected1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbRejected1ActionPerformed(evt);
            }
        });

        rbDoneForDay1.setText("YOUAREOUT");
        rbDoneForDay1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        rbDoneForDay1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDoneForDay1ActionPerformed(evt);
            }
        });

        cbStateButtonsSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStateButtonsSelectedActionPerformed(evt);
            }
        });

        rbUnsent.setText("UNSENT");
        rbUnsent.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        rbUnsent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbUnsentActionPerformed(evt);
            }
        });

        rbPendingCancel.setText("PENDINGCANCEL");
        rbPendingCancel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        rbPendingCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPendingCancelActionPerformed(evt);
            }
        });

        jLabel7.setText("Regex");

        jLabel8.setText("RicExt");

        buttonGroup1.add(rbSecurityRegexSelected);

        jLabel9.setText("Name");

        buttonGroup1.add(rbRicExtensionSelected);
        rbRicExtensionSelected.setSelected(true);

        buttonGroup1.add(rbSecurityNameSelected);

        txtSecurityName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSecurityNameActionPerformed(evt);
            }
        });

        cbSecurityNameSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSecurityNameSelectedActionPerformed(evt);
            }
        });

        cmdDismissFilter.setText("DISMISS");
        cmdDismissFilter.setFocusCycleRoot(true);
        cmdDismissFilter.setSelected(true);
        cmdDismissFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDismissFilterActionPerformed(evt);
            }
        });

        cbEU01.setText("EU01");
        cbEU01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEU01ActionPerformed(evt);
            }
        });

        cbEU02.setText("EU02");
        cbEU02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEU02ActionPerformed(evt);
            }
        });

        cbEU03.setText("EU03");
        cbEU03.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEU03ActionPerformed(evt);
            }
        });

        cbEU04.setText("EU04");
        cbEU04.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEU04ActionPerformed(evt);
            }
        });

        cbEU05.setText("EU05");
        cbEU05.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEU05ActionPerformed(evt);
            }
        });

        cbEU06.setText("EU06");
        cbEU06.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEU06ActionPerformed(evt);
            }
        });

        cbMicroStrategySelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMicroStrategySelectedActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbTX);
        rbTX.setText("TX");
        rbTX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTXActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbRX);
        rbRX.setText("RX");
        rbRX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbRXActionPerformed(evt);
            }
        });

        cbDestination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDestinationActionPerformed(evt);
            }
        });

        jLabel1.setText("NHWK");

        cbNHWK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNHWKActionPerformed(evt);
            }
        });

        cbUBSC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUBSCActionPerformed(evt);
            }
        });

        jLabel2.setText("UBSC");

        cbUBSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUBSVActionPerformed(evt);
            }
        });

        jLabel3.setText("UBSV");

        cbCSCR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCSCRActionPerformed(evt);
            }
        });

        jLabel4.setText("CSCR");

        cbISTC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbISTCActionPerformed(evt);
            }
        });

        jLabel5.setText("ISTC");

        cbUBSM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUBSMActionPerformed(evt);
            }
        });

        bla.setText("UBSM");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbNHWK)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbUBSC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbUBSV)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbCSCR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbISTC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbUBSM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bla)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(cbNHWK))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(cbUBSC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(cbUBSV))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(cbCSCR))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(cbISTC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bla)
                    .addComponent(cbUBSM)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbRicExtensionSelected)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rbSecurityRegexSelected)
                                        .addGap(23, 23, 23)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbSecurityNameSelected)
                                            .addComponent(txtSecurityName, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbDestination)
                                .addGap(30, 30, 30)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbTX, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(rbRX, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbSecurityNameSelected)
                        .addGap(82, 82, 82))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbRejected1)
                        .addGap(18, 18, 18)
                        .addComponent(cbStateButtonsSelected)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(cbEU03))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbFilterIncludesSingleOrders)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                        .addComponent(cbEU02))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbPENDINGNEW1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addComponent(cbEU04))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbNEW1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                        .addComponent(cbEU06))
                    .addComponent(rbPartial1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbDoneForDay1)
                        .addGap(52, 52, 52))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbFilled1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                        .addComponent(cbEU05))
                    .addComponent(rbUnsent)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbPendingCancel)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cbFilterIncludesBasketOrders)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(cbEU01)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbMicroStrategySelected))
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(cmdDismissFilter)
                .addContainerGap(94, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbEU01)
                            .addComponent(cbFilterIncludesBasketOrders))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbFilterIncludesSingleOrders)
                            .addComponent(cbEU02))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rbRejected1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(rbPENDINGNEW1)
                                            .addComponent(cbEU04))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(rbFilled1)
                                            .addComponent(cbEU05))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(rbNEW1)
                                            .addComponent(cbEU06))
                                        .addComponent(rbUnsent, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cbStateButtonsSelected))
                                .addComponent(rbPartial1)
                                .addComponent(rbPendingCancel)
                                .addComponent(rbDoneForDay1))
                            .addComponent(cbEU03)))
                    .addComponent(cbMicroStrategySelected))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(rbSecurityNameSelected)
                    .addComponent(cbSecurityNameSelected))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbSecurityRegexSelected)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbRicExtensionSelected))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(rbTX)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(rbRX))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSecurityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDestination))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdDismissFilter)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdDismissFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDismissFilterActionPerformed
        setVisible(false);
    }//GEN-LAST:event_cmdDismissFilterActionPerformed

    private void cbEU01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEU01ActionPerformed
        maybeCauseAnApply();        // TODO add your handling code here:
    }//GEN-LAST:event_cbEU01ActionPerformed

    private void cbEU02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEU02ActionPerformed
        maybeCauseAnApply();        // TODO add your handling code here:
    }//GEN-LAST:event_cbEU02ActionPerformed

    private void cbEU03ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEU03ActionPerformed
        maybeCauseAnApply();        // TODO add your handling code here:
    }//GEN-LAST:event_cbEU03ActionPerformed

    private void cbEU04ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEU04ActionPerformed
                maybeCauseAnApply();// TODO add your handling code here:
    }//GEN-LAST:event_cbEU04ActionPerformed

    private void cbEU05ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEU05ActionPerformed
                maybeCauseAnApply();// TODO add your handling code here:
    }//GEN-LAST:event_cbEU05ActionPerformed

    private void cbEU06ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEU06ActionPerformed
        maybeCauseAnApply();        // TODO add your handling code here:
    }//GEN-LAST:event_cbEU06ActionPerformed

    private void cbMicroStrategySelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMicroStrategySelectedActionPerformed
        maybeCauseAnApply();        // TODO add your handling code here:
    }//GEN-LAST:event_cbMicroStrategySelectedActionPerformed

    private void rbTXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTXActionPerformed
        // TODO add your handling code here:
        
        transmitting = true;;
       sendTxRxInfo(); 
    }//GEN-LAST:event_rbTXActionPerformed

    private void rbRXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbRXActionPerformed
        
        transmitting = false;
        sendTxRxInfo();// TODO add your handling code here:
    }//GEN-LAST:event_rbRXActionPerformed

    private void cbDestinationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDestinationActionPerformed
        maybeCauseAnApply();// TODO add your handling code here:
    }//GEN-LAST:event_cbDestinationActionPerformed

    private void cbNHWKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNHWKActionPerformed
       maybeCauseAnApply(); // TODO add your handling code here:
    }//GEN-LAST:event_cbNHWKActionPerformed

    private void cbUBSCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUBSCActionPerformed
       maybeCauseAnApply();  // TODO add your handling code here:
    }//GEN-LAST:event_cbUBSCActionPerformed

    private void cbUBSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUBSVActionPerformed
        maybeCauseAnApply();// TODO add your handling code here:
    }//GEN-LAST:event_cbUBSVActionPerformed

    private void cbCSCRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCSCRActionPerformed
        maybeCauseAnApply();// TODO add your handling code here:
    }//GEN-LAST:event_cbCSCRActionPerformed

    private void cbISTCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbISTCActionPerformed
        maybeCauseAnApply();// TODO add your handling code here:
    }//GEN-LAST:event_cbISTCActionPerformed

    private void cbUBSMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUBSMActionPerformed
        maybeCauseAnApply(); // TODO add your handling code here:
    }//GEN-LAST:event_cbUBSMActionPerformed

    private void cbFilterIncludesBasketOrdersActionPerformed(
            java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cbFilterIncludesBasketOrdersActionPerformed
        maybeCauseAnApply();
        // coordinator.filterIncludesBasketOrders(
        // cbFilterIncludesBasketOrders.isSelected() );
    }// GEN-LAST:event_cbFilterIncludesBasketOrdersActionPerformed

    private void cbFilterIncludesSingleOrdersActionPerformed(
            java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cbFilterIncludesSingleOrdersActionPerformed
        maybeCauseAnApply();
        // coordinator.filterIncludesSingleOrders(cbFilterIncludesSingleOrders.isSelected()
        // );
    }// GEN-LAST:event_cbFilterIncludesSingleOrdersActionPerformed

    private void rbFilled1ActionPerformed1(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_rbFilled1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_rbFilled1ActionPerformed

    private void rbUnsentActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_rbUnsentActionPerformed
        // TODO add your handling code here:
        maybeCauseAnApply();
    }// GEN-LAST:event_rbUnsentActionPerformed

    private void rbPendingCancelActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_rbPendingCancelActionPerformed
        // TODO add your handling code here:
        maybeCauseAnApply();
    }// GEN-LAST:event_rbPendingCancelActionPerformed

    /**
     * @param args
     *            the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameFilters(null).setVisible(true);
            }
        });
    }

    
    


   JCheckBox[] getDestinationCheckBoxes() {
       return new JCheckBox[] { cbNHWK, cbUBSC, cbUBSV, cbCSCR, cbISTC, cbUBSM };
   }



    
    JCheckBox[] getMicroStrategyButtons() {
        return new JCheckBox[] { cbEU01, cbEU02, cbEU03, cbEU04, cbEU05, cbEU06 };
    };

    String[] getMicroStrategyNames() {
        return new String[] { "EU01", "EU02", "EU03", "EU04", "EU05", "EU06" };
    }

    JRadioButton[] getStateButtons() {
        return new JRadioButton[] { rbPENDINGNEW1, rbNEW1, rbDoneForDay1,
                rbRejected1, rbPartial1, rbFilled1, rbUnsent, rbPendingCancel };
    }

    JRadioButton[] getLiveStateButtons() {
        return new JRadioButton[] { rbPENDINGNEW1, rbNEW1, rbPartial1,
                rbPendingCancel };
    }

    JRadioButton[] getTerminalStateButtons() {
        return new JRadioButton[] { rbDoneForDay1, rbRejected1, rbFilled1 };
    }

    Map<String, JRadioButton> getStateButtonMap() {
        Map<String, JRadioButton> ret = new TreeMap<String, JRadioButton>();
        for (JRadioButton rb : getStateButtons()) {
            ret.put(rb.getText(), rb);
        }
        return ret;
    }

    // public void applyFilterBean(FilterBean fb) {
    // Map<String, JRadioButton> buttonFor = getStateButtonMap();
    // for (JRadioButton rb : getStateButtons()) {
    // rb.setSelected(false);
    // }
    // for (String s : fb.getStates()) {
    // if (!buttonFor.containsKey(s)) {
    // throw new PraxisRunTimeException("Can't map state " + s
    // + " all I have is "
    // + StringUtils.join(buttonFor.keySet(), ", "));
    // }
    // buttonFor.get(s).setSelected(true);
    // }
    //
    // //cbApplyOrderStateFilter.setSelected(fb.isFilterByOrderState());
    // //cbApplySecurityFilter.setSelected(fb.isFilterBySecurity());
    //
    // //txtFilterName.setText(fb.getFilterName());
    // txtSecurityName.setText(fb.getTxtSecurityName());
    //
    // rbSecurityNameSelected.setSelected(fb.isSecurityNameSelected());
    // rbSecurityRegexSelected.setSelected(fb.isRegexSelected());
    // rbRicExtensionSelected.setSelected(fb.isRicExtensionSelected());
    //
    // }


    private void cmdSelectAllBasketsActionPerformed(
            java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cmdSelectAllBasketsActionPerformed
        // TODO add your handling code here:
        coordinator.selectAll();

    }// GEN-LAST:event_cmdSelectAllBasketsActionPerformed

    private void cmdCancelWaveActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cmdCancelWaveActionPerformed
        // TODO add your handling code here:
        coordinator.cancelWaveClicked();

    }// GEN-LAST:event_cmdCancelWaveActionPerformed

    private void cmdCancelOrderActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cmdCancelOrderActionPerformed
        // TODO add your handling code here:
        coordinator.cancelOrderClicked();
    }// GEN-LAST:event_cmdCancelOrderActionPerformed

    private void cmdCancelBasketActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cmdCancelBasketActionPerformed
        // TODO add your handling code here:
        coordinator.cancelBasketClicked();
    }// GEN-LAST:event_cmdCancelBasketActionPerformed

    private void cmdSelectAllWavesActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cmdSelectAllWavesActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_cmdSelectAllWavesActionPerformed


    public void maybeCauseAnApply() {
        //coordinator.userSelectedFilter(getFilterBean());
    }

    private void rbFilled1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_rbFilled1ActionPerformed
        // TODO add your handling code here:
        maybeCauseAnApply();
    }// GEN-LAST:event_rbFilled1ActionPerformed

    private void rbPartial1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_rbPartial1ActionPerformed
        maybeCauseAnApply();// TODO add your handling code here:
    }// GEN-LAST:event_rbPartial1ActionPerformed

    private void rbPENDINGNEW1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_rbPENDINGNEW1ActionPerformed
        maybeCauseAnApply(); // TODO add your handling code here:
    }// GEN-LAST:event_rbPENDINGNEW1ActionPerformed

    private void rbNEW1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_rbNEW1ActionPerformed
        // TODO add your handling code here:
        maybeCauseAnApply();
    }// GEN-LAST:event_rbNEW1ActionPerformed

    private void rbRejected1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_rbRejected1ActionPerformed
        // TODO add your handling code here:
        maybeCauseAnApply();
    }// GEN-LAST:event_rbRejected1ActionPerformed

    private void rbDoneForDay1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_rbDoneForDay1ActionPerformed
        // TODO add your handling code here:

        maybeCauseAnApply();
    }// GEN-LAST:event_rbDoneForDay1ActionPerformed

    private void cbSecurityNameSelectedActionPerformed(
            java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cbSecurityNameSelectedActionPerformed
        // TODO add your handling code here:
        maybeCauseAnApply();
    }// GEN-LAST:event_cbSecurityNameSelectedActionPerformed

    private void cbStateButtonsSelectedActionPerformed(
            java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cbStateButtonsSelectedActionPerformed
        maybeCauseAnApply();
    }// GEN-LAST:event_cbStateButtonsSelectedActionPerformed

    private void txtSecurityNameActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtSecurityNameActionPerformed
        if (cbSecurityNameSelected.isSelected()) {
            maybeCauseAnApply();
        }
    }// GEN-LAST:event_txtSecurityNameActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bla;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    public javax.swing.JCheckBox cbCSCR;
    public javax.swing.JCheckBox cbDestination;
    public javax.swing.JCheckBox cbEU01;
    public javax.swing.JCheckBox cbEU02;
    public javax.swing.JCheckBox cbEU03;
    public javax.swing.JCheckBox cbEU04;
    public javax.swing.JCheckBox cbEU05;
    public javax.swing.JCheckBox cbEU06;
    private javax.swing.JCheckBox cbFilterIncludesBasketOrders;
    private javax.swing.JCheckBox cbFilterIncludesSingleOrders;
    public javax.swing.JCheckBox cbISTC;
    public javax.swing.JCheckBox cbMicroStrategySelected;
    public javax.swing.JCheckBox cbNHWK;
    private javax.swing.JCheckBox cbSecurityNameSelected;
    private javax.swing.JCheckBox cbStateButtonsSelected;
    public javax.swing.JCheckBox cbUBSC;
    public javax.swing.JCheckBox cbUBSM;
    public javax.swing.JCheckBox cbUBSV;
    public javax.swing.JButton cmdDismissFilter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JRadioButton rbDoneForDay1;
    public javax.swing.JRadioButton rbFilled1;
    public javax.swing.JRadioButton rbNEW1;
    public javax.swing.JRadioButton rbPENDINGNEW1;
    public javax.swing.JRadioButton rbPartial1;
    public javax.swing.JRadioButton rbPendingCancel;
    private javax.swing.JRadioButton rbRX;
    public javax.swing.JRadioButton rbRejected1;
    private javax.swing.JRadioButton rbRicExtensionSelected;
    private javax.swing.JRadioButton rbSecurityNameSelected;
    private javax.swing.JRadioButton rbSecurityRegexSelected;
    private javax.swing.JRadioButton rbTX;
    public javax.swing.JRadioButton rbUnsent;
    public javax.swing.JTextField txtSecurityName;
    // End of variables declaration//GEN-END:variables

    private void sendTxRxInfo() {
       // if ( rbTX.isSelected() != rbRX.isSelected()) throw new PraxisRunTimeException("Logic error, radio buttons should have mutual exclusivity");
       // boolean isSending = rbTX.isSelected();
        coordinator.setInterlinkSending(transmitting);
    }

}
